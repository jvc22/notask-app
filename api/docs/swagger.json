{
    "swagger": "2.0",
    "info": {
        "description": "To-do app API to manage tasks",
        "title": "notask.app API",
        "contact": {},
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/sign-in": {
            "post": {
                "description": "Authenticate user based on credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in user",
                "parameters": [
                    {
                        "description": "Auth object",
                        "name": "auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Auth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accessed"
                    },
                    "400": {
                        "description": "Username and password are required",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Username not found or invalid password",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Error parsing body, searching user, or generating token",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Create new user account on database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up user",
                "parameters": [
                    {
                        "description": "Auth object",
                        "name": "auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Auth"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Username and password are required",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    },
                    "409": {
                        "description": "Username already in use",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Error parsing body or registering new account",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Get all tasks created specifically by the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Fetch and return tasks",
                "responses": {
                    "200": {
                        "description": "Fetched",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Task"
                            }
                        }
                    },
                    "500": {
                        "description": "Error parsing body or fetching tasks",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Insert new user task into database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create new task",
                "parameters": [
                    {
                        "description": "Task object",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Title is required",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Error parsing body or creating task",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove task from database using id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Task Id should be a valid number | Task not found",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Error checking or deleting task",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Get all profile user information registered on the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Fetch and return user info",
                "responses": {
                    "200": {
                        "description": "Fetched"
                    },
                    "500": {
                        "description": "Error fetching user profile",
                        "schema": {
                            "$ref": "#/definitions/routes.ResponseErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Auth": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "database.Task": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "routes.ResponseErrorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}